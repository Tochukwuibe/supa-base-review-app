[{"/Users/tochibe/learn/supabase/supabase-shopping/src/index.js":"1","/Users/tochibe/learn/supabase/supabase-shopping/src/App.js":"2","/Users/tochibe/learn/supabase/supabase-shopping/src/reportWebVitals.js":"3","/Users/tochibe/learn/supabase/supabase-shopping/src/Cart/Cart.js":"4","/Users/tochibe/learn/supabase/supabase-shopping/src/Login/Login.js":"5","/Users/tochibe/learn/supabase/supabase-shopping/src/Listing/Listing.js":"6","/Users/tochibe/learn/supabase/supabase-shopping/src/superbaseContext.js":"7","/Users/tochibe/learn/supabase/supabase-shopping/src/AppNavbar/AppNavbar.js":"8","/Users/tochibe/learn/supabase/supabase-shopping/src/ListItem/ListItem.js":"9","/Users/tochibe/learn/supabase/supabase-shopping/src/keys.js":"10"},{"size":644,"mtime":1608352998133,"results":"11","hashOfConfig":"12"},{"size":1535,"mtime":1608431156284,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608350463805,"results":"14","hashOfConfig":"12"},{"size":1435,"mtime":1608436116863,"results":"15","hashOfConfig":"12"},{"size":2320,"mtime":1608436482398,"results":"16","hashOfConfig":"12"},{"size":1359,"mtime":1608432523513,"results":"17","hashOfConfig":"12"},{"size":263,"mtime":1608436255889,"results":"18","hashOfConfig":"12"},{"size":1067,"mtime":1608436482398,"results":"19","hashOfConfig":"12"},{"size":478,"mtime":1608432765737,"results":"20","hashOfConfig":"12"},{"size":233,"mtime":1608436255889,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"15a7cnd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/tochibe/learn/supabase/supabase-shopping/src/index.js",[],["47","48"],"/Users/tochibe/learn/supabase/supabase-shopping/src/App.js",["49","50"],"import { Route, Switch, useHistory } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Cart from './Cart/Cart';\nimport Listing from './Listing/Listing';\nimport Login from './Login/Login';\nimport { SuperBaseContext } from './superbaseContext'\nimport Container from 'react-bootstrap/Container';\nimport AppNavbar from './AppNavbar/AppNavbar';\n\nfunction App() {\n\n\n  const superbase = useContext(SuperBaseContext);\n  const [user, setUser] = useState(superbase.auth.session());\n  const history = useHistory()\n\n  console.log(\"the user \", user);\n  useEffect(() => {\n    setTimeout(() => setUser(superbase.auth.session()), 300)\n  }, [])\n\n  useEffect(() => {\n\n\n    const { data } = superbase.auth.onAuthStateChange((_user, session) => {\n\n\n      setUser(session)\n\n      return data;\n    });\n\n  }, [])\n\n  return (\n    <>\n      <AppNavbar\n        signedIn={!!user}\n        onLogout={() => superbase.auth.signOut()}\n        onToCart={() => history.push(\"/cart\")}\n        onHomeClicked={() => history.replace(\"/\")}\n      />\n      <Container>\n\n\n        <Switch>\n          {!user ? (\n            <>\n              <Route path=\"\" component={Login} />\n            </>\n          ) :\n            (\n              <>\n                <Route path=\"/cart\" render={() => <Cart user={user.user} />} />\n                <Route path=\"/\" exact render={() => <Listing user={user.user} />} />\n              </>\n            )\n          }\n        </Switch>\n      </Container>\n    </>\n  );\n\n}\n\nexport default App;\n","/Users/tochibe/learn/supabase/supabase-shopping/src/reportWebVitals.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/Cart/Cart.js",["51"],"import React, { useEffect, useContext, useState } from 'react'\nimport { SuperBaseContext } from '../superbaseContext';\nimport ListItem from '../ListItem/ListItem'\nimport { useRef } from 'react';\n\n\nexport default function Cart({ user }) {\n\n    const [fruits, setFruits] = useState([]);\n    const superbase = useContext(SuperBaseContext);\n    const ref = useRef(superbase.from('cart'));\n\n    console.log(\"The fruits \", fruits);\n    useEffect(() => {\n\n\n        ref.current.select(\"*, fruit: listings(*)\")\n            .filter('userId', 'eq', user.id)\n            .then(({ data }) => setFruits(data))\n            .catch((err) => console.log(\"The then error \", err));\n\n    }, []);\n\n    const onRemoveFromCart = async (id) => {\n        try {\n            await superbase\n                .from('cart')\n                .delete()\n                .match({ itemId: id, userId: user.id })\n\n            setFruits(fruits.filter(({ fruit }) => fruit.id !== id));\n\n        } catch (e) {\n\n        }\n    }\n\n    return (\n        <div>\n            {fruits.map(({\n                fruit: {\n                    id,\n                    name,\n                    image\n                }\n            }) => (\n                <ListItem\n                    key={id}\n                    img={image}\n                    title={name}\n                    onRemoveClick={() => onRemoveFromCart(id)}\n                />\n            ))\n\n            }\n        </div>\n    )\n}\n","/Users/tochibe/learn/supabase/supabase-shopping/src/Login/Login.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/Listing/Listing.js",["52"],"import React, { useContext, useEffect, useState } from 'react'\nimport ListItem from '../ListItem/ListItem'\nimport { SuperBaseContext } from '../superbaseContext'\n\nexport default function Listing({\n    user\n}) {\n\n    const superbase = useContext(SuperBaseContext);\n    const [fruits, setFruits] = useState([]);\n\n    useEffect(() => {\n        const ref = superbase.from('listings')\n        ref.then(({ data }) => setFruits(data));\n        return ref.on(\"*\", ({ new: _new }) => {\n            setFruits(fruits.map((fruit) => fruit.id === _new.id ? _new : fruit));\n        }).subscribe()\n    }, [])\n\n    const onAddToCart = async (itemId) => {\n        try {\n\n\n            await superbase\n                .from('cart')\n                .insert([\n                    { userId: user.id, itemId }\n                ])\n\n\n\n        } catch (e) {\n            console.log(\"the error \", e)\n        }\n\n    }\n\n\n    return (\n        <>\n            <div>\n                {fruits.map(({\n                    id,\n                    name,\n                    image\n                }) => (\n                    <ListItem\n                        key={id}\n                        img={image}\n                        title={name}\n                        onAddClick={() => onAddToCart(id)}\n                    />\n                ))\n\n                }\n            </div>\n        </>\n    )\n}\n","/Users/tochibe/learn/supabase/supabase-shopping/src/superbaseContext.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/AppNavbar/AppNavbar.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/ListItem/ListItem.js",["53"],"import React from 'react'\n\nexport default function ListItem({\n    img,\n    title,\n    onAddClick,\n    onRemoveClick\n}) {\n    return (\n        <div className=\"ListItem\">\n            <div>\n                <img src={img} />\n                <h4>{title}</h4>\n            </div>\n\n            {onAddClick ? <span className=\"add\" onClick={onAddClick}>+</span> : null}\n            {onRemoveClick ? <span className=\"remove\" onClick={onRemoveClick}>-</span> : null}\n        </div>\n    )\n}\n","/Users/tochibe/learn/supabase/supabase-shopping/src/keys.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":21,"column":6,"nodeType":"60","endLine":21,"endColumn":8,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"59","line":34,"column":6,"nodeType":"60","endLine":34,"endColumn":8,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"63","line":22,"column":8,"nodeType":"60","endLine":22,"endColumn":10,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"65","line":18,"column":8,"nodeType":"60","endLine":18,"endColumn":10,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":12,"column":17,"nodeType":"69","endLine":12,"endColumn":34},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'superbase.auth'. Either include it or remove the dependency array.","ArrayExpression",["72"],["73"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["74"],"React Hook useEffect has missing dependencies: 'fruits' and 'superbase'. Either include them or remove the dependency array. You can also do a functional update 'setFruits(f => ...)' if you only need 'fruits' in the 'setFruits' call.",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"76","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [superbase.auth]",{"range":"83","text":"84"},{"range":"85","text":"84"},"Update the dependencies array to be: [user.id]",{"range":"86","text":"87"},"Update the dependencies array to be: [fruits, superbase]",{"range":"88","text":"89"},[683,685],"[superbase.auth]",[845,847],[670,672],"[user.id]",[590,592],"[fruits, superbase]"]