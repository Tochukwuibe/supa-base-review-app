[{"/Users/tochibe/learn/supabase/supabase-shopping/src/index.js":"1","/Users/tochibe/learn/supabase/supabase-shopping/src/App.js":"2","/Users/tochibe/learn/supabase/supabase-shopping/src/reportWebVitals.js":"3","/Users/tochibe/learn/supabase/supabase-shopping/src/Cart/Cart.js":"4","/Users/tochibe/learn/supabase/supabase-shopping/src/Login/Login.js":"5","/Users/tochibe/learn/supabase/supabase-shopping/src/Listing/Listing.js":"6","/Users/tochibe/learn/supabase/supabase-shopping/src/superbaseContext.js":"7","/Users/tochibe/learn/supabase/supabase-shopping/src/AppNavbar/AppNavbar.js":"8","/Users/tochibe/learn/supabase/supabase-shopping/src/ListItem/ListItem.js":"9","/Users/tochibe/learn/supabase/supabase-shopping/src/keys.js":"10"},{"size":644,"mtime":1608352998133,"results":"11","hashOfConfig":"12"},{"size":1433,"mtime":1608523347745,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608350463805,"results":"14","hashOfConfig":"12"},{"size":1643,"mtime":1608523531063,"results":"15","hashOfConfig":"12"},{"size":2249,"mtime":1608523543367,"results":"16","hashOfConfig":"12"},{"size":1838,"mtime":1608523327481,"results":"17","hashOfConfig":"12"},{"size":139,"mtime":1608523600749,"results":"18","hashOfConfig":"12"},{"size":1067,"mtime":1608436482398,"results":"19","hashOfConfig":"12"},{"size":478,"mtime":1608432765737,"results":"20","hashOfConfig":"12"},{"size":233,"mtime":1608436255889,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"15a7cnd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/tochibe/learn/supabase/supabase-shopping/src/index.js",[],["45","46"],"/Users/tochibe/learn/supabase/supabase-shopping/src/App.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/reportWebVitals.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/Cart/Cart.js",["47","48"],"/Users/tochibe/learn/supabase/supabase-shopping/src/Login/Login.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/Listing/Listing.js",["49"],"import React, { useEffect, useState } from 'react'\nimport ListItem from '../ListItem/ListItem'\nimport { superbase } from '../superbaseContext';\n\nexport default function Listing({\n    user\n}) {\n\n    const [fruits, setFruits] = useState([]);\n    const [newFruit, setNewFruit] = useState([]);\n\n\n    useEffect(() => {\n        const ref = superbase.from('listings')\n        ref.then(({ data }) => setFruits(data));\n\n        return ref\n            .on(\"INSERT\", ({ new: _new }) => {\n                setNewFruit(_new);\n            })\n            .on(\"UPDATE\", ({ new: _new }) => {\n                setNewFruit(_new)\n            }).subscribe()\n\n    }, [])\n\n    useEffect(() => {\n\n        if (newFruit) {\n            const curr = fruits.find((fruit) => fruit.id === newFruit.id);\n            let newFruits = [...fruits];\n            if (curr) {\n                newFruits = newFruits.map((fruit) => fruit.id === newFruit.id ? newFruit : fruit)\n            } else {\n                newFruits.push(newFruit)\n            }\n            setFruits(newFruits);\n        }\n\n    }, [newFruit])\n\n    const onAddToCart = async (itemId) => {\n        try {\n\n\n            await superbase\n                .from('cart')\n                .insert([\n                    { userId: user.id, itemId }\n                ])\n\n\n\n        } catch (e) {\n            console.log(\"the error \", e)\n        }\n\n    }\n\n\n    return (\n        <>\n            <div>\n                {fruits.map(({\n                    id,\n                    name,\n                    image\n                }) => (\n                    <ListItem\n                        key={id}\n                        img={image}\n                        title={name}\n                        onAddClick={() => onAddToCart(id)}\n                    />\n                ))\n\n                }\n            </div>\n        </>\n    )\n}\n","/Users/tochibe/learn/supabase/supabase-shopping/src/superbaseContext.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/AppNavbar/AppNavbar.js",[],"/Users/tochibe/learn/supabase/supabase-shopping/src/ListItem/ListItem.js",["50"],"import React from 'react'\n\nexport default function ListItem({\n    img,\n    title,\n    onAddClick,\n    onRemoveClick\n}) {\n    return (\n        <div className=\"ListItem\">\n            <div>\n                <img src={img} />\n                <h4>{title}</h4>\n            </div>\n\n            {onAddClick ? <span className=\"add\" onClick={onAddClick}>+</span> : null}\n            {onRemoveClick ? <span className=\"remove\" onClick={onRemoveClick}>-</span> : null}\n        </div>\n    )\n}\n","/Users/tochibe/learn/supabase/supabase-shopping/src/keys.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":26,"column":8,"nodeType":"57","endLine":26,"endColumn":10,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":33,"column":8,"nodeType":"57","endLine":33,"endColumn":22,"suggestions":"60"},{"ruleId":"55","severity":1,"message":"61","line":42,"column":8,"nodeType":"57","endLine":42,"endColumn":18,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":12,"column":17,"nodeType":"65","endLine":12,"endColumn":34},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'fruits'. Either include it or remove the dependency array. You can also do a functional update 'setFruits(f => ...)' if you only need 'fruits' in the 'setFruits' call.",["69"],"React Hook useEffect has a missing dependency: 'fruits'. Either include it or remove the dependency array.",["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [user.id]",{"range":"77","text":"78"},"Update the dependencies array to be: [deletedFruit, fruits]",{"range":"79","text":"80"},"Update the dependencies array to be: [fruits, newFruit]",{"range":"81","text":"82"},[757,759],"[user.id]",[904,918],"[deletedFruit, fruits]",[1174,1184],"[fruits, newFruit]"]